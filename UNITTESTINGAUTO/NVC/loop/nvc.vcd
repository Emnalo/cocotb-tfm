$date
	Thu Jul 11 10:19:31 2024

$end
$version
	nvc 1.12.0
$end
$timescale
	1fs
$end
$attrbegin misc 03 /home/emnalo/Test/UNITTESTINGAUTO/NVC/RegisteredALU_tbloop.vhd 1 $end
$attrbegin misc 04 1 39 $end
$scope vhdl_architecture registeredalu_tbloop $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 ! rst $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 " clk $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 # en $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 $ a[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 % b[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 3 & operation[2:0] $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 ' zero $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 ( result[7:0] $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 ) run_again $end
$attrbegin misc 04 1 41 $end
$scope vhdl_architecture uut $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 ! rst_i $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 " clk_i $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 # en_i $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 $ a_i[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 % b_i[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 3 & operation_i[2:0] $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 ' zero_o $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 ( result_o[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 * result[7:0] $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 + zero $end
$attrbegin misc 03 /home/emnalo/Test/UNITTESTINGAUTO/NVC/RegisteredALU.vhd 2 $end
$attrbegin misc 04 2 48 $end
$scope vhdl_architecture alu $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 $ a_i[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 % b_i[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 3 & operation_i[2:0] $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 + zero_o $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 * result_o[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 , add_result[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 - sub_result[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 . and_result[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 / or_result[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 0 slt_result[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 1 aux_result[7:0] $end
$upscope $end
$attrbegin misc 04 2 57 $end
$scope vhdl_architecture result_register $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 ! rst_i $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 " clk_i $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 # en_i $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 * d_i[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 ( q_o[7:0] $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 8 2 aux[7:0] $end
$upscope $end
$attrbegin misc 04 2 57 $end
$scope vhdl_architecture zero_register $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 ! rst_i $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 " clk_i $end
$attrbegin misc 02 STD_LOGIC 1030 $end
$var logic 1 # en_i $end
$attrbegin misc 02 STD_LOGIC_VECTOR 1029 $end
$var logic 1 3 aux[0:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
03
b00000000 2
b00000000 1
b00000000 0
b00000000 /
b00000000 .
b00000000 -
b00000000 ,
1+
b00000000 *
1)
b00000000 (
0'
b000 &
b00000000 %
b00000000 $
1#
0"
0!
$end
#5000000
1"
1'
13
#10000000
0"
b010 &
#15000000
1"
#20000000
0"
b110 &
#25000000
1"
#30000000
0"
b000 &
#35000000
1"
#40000000
0"
b001 &
#45000000
1"
#50000000
0"
b111 &
#55000000
1"
#60000000
0"
b010 &
b00111010 $
b00011001 %
b01010011 *
0+
b01010011 ,
b00100001 -
b00011000 .
b00111011 /
b01010011 1
#65000000
1"
03
0'
b01010011 (
b01010011 2
#70000000
0"
b00100001 1
b00100001 *
b110 &
#75000000
1"
b00100001 2
b00100001 (
#80000000
0"
b000 &
b00011000 *
b00011000 1
#85000000
1"
b00011000 (
b00011000 2
#90000000
0"
b00111011 1
b00111011 *
b001 &
#95000000
1"
b00111011 2
b00111011 (
#100000000
0"
b111 &
b00000000 *
b00000000 1
1+
#105000000
1"
b00000000 (
b00000000 2
1'
13
#110000000
0"
0+
b00100111 1
b00100111 *
b010 &
b00011111 /
b00001000 .
b11110101 -
b00100111 ,
b00001110 $
b00000001 0
#115000000
1"
03
0'
b00100111 2
b00100111 (
#120000000
0"
b110 &
b11110101 *
b11110101 1
#125000000
1"
b11110101 (
b11110101 2
#130000000
0"
b00001000 1
b00001000 *
b000 &
#135000000
1"
b00001000 2
b00001000 (
#140000000
0"
b001 &
b00011111 *
b00011111 1
#145000000
1"
b00011111 (
b00011111 2
#150000000
0"
b00000001 1
b00000001 *
b111 &
#155000000
1"
b00000001 2
b00000001 (
#160000000
0"
0)
#165000000
1"
#170000000
0"
#175000000
1"
#180000000
0"
#185000000
1"
#190000000
0"
#195000000
1"
#200000000
0"
#200000001
1)
#205000000
1"
#210000000
0"
b010 &
b00000000 *
b00000000 1
b00000000 0
b00000000 $
b00000000 ,
b00000000 -
b00000000 .
b00000000 /
1+
b00000000 %
#215000000
1"
b00000000 (
b00000000 2
1'
13
#220000000
0"
b110 &
#225000000
1"
#230000000
0"
b000 &
#235000000
1"
#240000000
0"
b001 &
#245000000
1"
#250000000
0"
b111 &
#255000000
1"
#260000000
0"
b010 &
b00011001 %
0+
b00111011 /
b00011000 .
b00100001 -
b01010011 ,
b00111010 $
b01010011 1
b01010011 *
#265000000
1"
03
0'
b01010011 2
b01010011 (
#270000000
0"
b00100001 *
b00100001 1
b110 &
#275000000
1"
b00100001 (
b00100001 2
#280000000
0"
b000 &
b00011000 1
b00011000 *
#285000000
1"
b00011000 2
b00011000 (
#290000000
0"
b00111011 *
b00111011 1
b001 &
#295000000
1"
b00111011 (
b00111011 2
#300000000
0"
b111 &
b00000000 1
b00000000 *
1+
#300000001
b01011010 $
b01110011 ,
b01000001 -
b01011011 /
#305000000
1"
b00000000 2
b00000000 (
1'
13
#310000000
0"
0+
b01110011 *
b01110011 1
b010 &
#315000000
1"
03
0'
b01110011 (
b01110011 2
#320000000
0"
b110 &
b01000001 1
b01000001 *
#325000000
1"
b01000001 2
b01000001 (
#330000000
0"
b00011000 *
b00011000 1
b000 &
#335000000
1"
b00011000 (
b00011000 2
#340000000
0"
b001 &
b01011011 1
b01011011 *
#345000000
1"
b01011011 2
b01011011 (
#350000000
0"
b00000000 *
b00000000 1
b111 &
1+
#355000000
1"
b00000000 (
b00000000 2
1'
13
#360000000
0"
0)
#365000000
1"
#370000000
0"
#375000000
1"
#380000000
0"
#380000002
1)
#385000000
1"
#390000000
0"
0+
b010 &
b01011010 1
b01011010 *
b01011010 /
b01011010 -
b01011010 ,
b00000000 .
b00000000 %
#395000000
1"
03
0'
b01011010 2
b01011010 (
#400000000
0"
b110 &
#405000000
1"
#410000000
0"
b000 &
b00000000 *
b00000000 1
1+
#415000000
1"
b00000000 (
b00000000 2
1'
13
#420000000
0"
0+
b01011010 1
b01011010 *
b001 &
#425000000
1"
03
0'
b01011010 2
b01011010 (
#430000000
0"
b111 &
b00000000 *
b00000000 1
1+
#435000000
1"
b00000000 (
b00000000 2
1'
13
#440000000
0"
0+
b01110011 1
b01110011 *
b010 &
b00011001 %
b00011000 .
b01110011 ,
b01000001 -
b01011011 /
#445000000
1"
03
0'
b01110011 2
b01110011 (
#450000000
0"
b110 &
b01000001 *
b01000001 1
#455000000
1"
b01000001 (
b01000001 2
#460000000
0"
b00011000 1
b00011000 *
b000 &
#465000000
1"
b00011000 2
b00011000 (
#470000000
0"
b001 &
b01011011 *
b01011011 1
#475000000
1"
b01011011 (
b01011011 2
#480000000
0"
b00000000 1
b00000000 *
b111 &
1+
#485000000
1"
b00000000 2
b00000000 (
1'
13
#490000000
0"
0+
b010 &
b01110011 *
b01110011 1
#495000000
1"
03
0'
b01110011 (
b01110011 2
#500000000
0"
b01000001 1
b01000001 *
b110 &
#500000002
b11110101 *
b11110101 1
b00011111 /
b11110101 -
b00100111 ,
b00001000 .
b00001110 $
b00000001 0
#505000000
1"
b11110101 2
b11110101 (
#510000000
0"
b00001000 1
b00001000 *
b000 &
#515000000
1"
b00001000 (
b00001000 2
#520000000
0"
b001 &
b00011111 *
b00011111 1
#525000000
1"
b00011111 2
b00011111 (
#530000000
0"
b00000001 1
b00000001 *
b111 &
#535000000
1"
b00000001 (
b00000001 2
#540000000
0"
0)
#545000000
1"
#550000000
0"
#555000000
1"
#560000000
0"
#565000000
1"
#570000000
0"
#575000000
1"
#580000000
0"
#580000003
1)
#585000000
1"
#590000000
0"
b010 &
b00000000 *
b00000000 1
b00000000 0
b00000000 $
b00000000 .
b00000000 ,
b00000000 -
b00000000 /
1+
b00000000 %
#595000000
1"
b00000000 2
b00000000 (
1'
13
#600000000
0"
b110 &
#605000000
1"
#610000000
0"
b000 &
#615000000
1"
#620000000
0"
b001 &
#625000000
1"
#630000000
0"
b111 &
#635000000
1"
#640000000
0"
b010 &
b00011001 %
0+
b00111011 /
b00100001 -
b01010011 ,
b00011000 .
b00111010 $
b01010011 1
b01010011 *
#645000000
1"
03
0'
b01010011 (
b01010011 2
#650000000
0"
b00100001 *
b00100001 1
b110 &
#655000000
1"
b00100001 2
b00100001 (
#660000000
0"
b000 &
b00011000 1
b00011000 *
#665000000
1"
b00011000 (
b00011000 2
#670000000
0"
b00111011 *
b00111011 1
b001 &
#675000000
1"
b00111011 2
b00111011 (
#680000000
0"
b111 &
b00000000 1
b00000000 *
1+
#680000003
b01011010 $
b01110011 ,
b01000001 -
b01011011 /
#685000000
1"
b00000000 (
b00000000 2
1'
13
#690000000
0"
0+
b01110011 *
b01110011 1
b010 &
#695000000
1"
03
0'
b01110011 2
b01110011 (
#700000000
0"
b110 &
b01000001 1
b01000001 *
#700000003
b11110101 *
b11110101 1
b00011111 /
b11110101 -
b00100111 ,
b00001110 $
b00001000 .
b00000001 0
#705000000
1"
b11110101 (
b11110101 2
#710000000
0"
b00001000 1
b00001000 *
b000 &
#715000000
1"
b00001000 2
b00001000 (
#720000000
0"
b001 &
b00011111 *
b00011111 1
#725000000
1"
b00011111 (
b00011111 2
#730000000
0"
b00000001 1
b00000001 *
b111 &
#735000000
1"
b00000001 2
b00000001 (
#740000000
0"
0)
#745000000
1"
#750000000
0"
#755000000
1"
#760000000
0"
#765000000
1"
#770000000
0"
#775000000
1"
#780000000
0"
#780000004
